// This file is automatically generated by qtc from "Dockerfile.qtpl".
// See https://github.com/valyala/quicktemplate for details.

//line Dockerfile.qtpl:1
package templates

//line Dockerfile.qtpl:1
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line Dockerfile.qtpl:1
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line Dockerfile.qtpl:1
func StreamDockerfileTemplate(qw422016 *qt422016.Writer, projectSlug string) {
	//line Dockerfile.qtpl:1
	qw422016.N().S(`FROM heroku/heroku:16-build as build

COPY . /app
WORKDIR /app

# Setup buildpack
RUN mkdir -p /tmp/buildpack/heroku/go /tmp/build_cache /tmp/env
RUN curl https://codon-buildpacks.s3.amazonaws.com/buildpacks/heroku/go.tgz | tar xz -C /tmp/buildpack/heroku/go

#Execute Buildpack
RUN STACK=heroku-16 /tmp/buildpack/heroku/go/bin/compile /app /tmp/build_cache /tmp/env

# Prepare final, minimal image
FROM heroku/heroku:16

COPY --from=build /app /app
ENV HOME /app
WORKDIR /app
RUN useradd -m heroku
USER heroku
CMD /app/bin/`)
	//line Dockerfile.qtpl:21
	qw422016.E().S(projectSlug)
//line Dockerfile.qtpl:21
}

//line Dockerfile.qtpl:21
func WriteDockerfileTemplate(qq422016 qtio422016.Writer, projectSlug string) {
	//line Dockerfile.qtpl:21
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line Dockerfile.qtpl:21
	StreamDockerfileTemplate(qw422016, projectSlug)
	//line Dockerfile.qtpl:21
	qt422016.ReleaseWriter(qw422016)
//line Dockerfile.qtpl:21
}

//line Dockerfile.qtpl:21
func DockerfileTemplate(projectSlug string) string {
	//line Dockerfile.qtpl:21
	qb422016 := qt422016.AcquireByteBuffer()
	//line Dockerfile.qtpl:21
	WriteDockerfileTemplate(qb422016, projectSlug)
	//line Dockerfile.qtpl:21
	qs422016 := string(qb422016.B)
	//line Dockerfile.qtpl:21
	qt422016.ReleaseByteBuffer(qb422016)
	//line Dockerfile.qtpl:21
	return qs422016
//line Dockerfile.qtpl:21
}
